
robot_arm_v1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000007f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000077c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  000007f0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000820  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000860  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000124d  00000000  00000000  00000918  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000092a  00000000  00000000  00001b65  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008e2  00000000  00000000  0000248f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b4  00000000  00000000  00002d74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000524  00000000  00000000  00002f28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009bc  00000000  00000000  0000344c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003e08  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e7       	ldi	r30, 0x7C	; 124
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 30       	cpi	r26, 0x04	; 4
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <main>
  9e:	0c 94 bc 03 	jmp	0x778	; 0x778 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_init>:
    } else {
        status = TRANSMISSION_ERROR;
    }

    return status;
}
  a6:	e9 eb       	ldi	r30, 0xB9	; 185
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	8c 7f       	andi	r24, 0xFC	; 252
  ae:	80 83       	st	Z, r24
  b0:	88 e4       	ldi	r24, 0x48	; 72
  b2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  b6:	08 95       	ret

000000b8 <i2c_tx_start>:
  b8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
  bc:	ec eb       	ldi	r30, 0xBC	; 188
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	84 6a       	ori	r24, 0xA4	; 164
  c4:	80 83       	st	Z, r24
  c6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  ca:	88 23       	and	r24, r24
  cc:	e4 f7       	brge	.-8      	; 0xc6 <i2c_tx_start+0xe>
  ce:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  d2:	88 7f       	andi	r24, 0xF8	; 248
  d4:	88 30       	cpi	r24, 0x08	; 8
  d6:	11 f0       	breq	.+4      	; 0xdc <i2c_tx_start+0x24>
  d8:	80 31       	cpi	r24, 0x10	; 16
  da:	11 f4       	brne	.+4      	; 0xe0 <i2c_tx_start+0x28>
  dc:	8f ef       	ldi	r24, 0xFF	; 255
  de:	08 95       	ret
  e0:	8e ef       	ldi	r24, 0xFE	; 254
  e2:	08 95       	ret

000000e4 <i2c_tx_address>:
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_end>
  ee:	89 2b       	or	r24, r25
  f0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  f4:	ec eb       	ldi	r30, 0xBC	; 188
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	8f 7d       	andi	r24, 0xDF	; 223
  fc:	80 83       	st	Z, r24
  fe:	80 81       	ld	r24, Z
 100:	80 68       	ori	r24, 0x80	; 128
 102:	80 83       	st	Z, r24
 104:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 108:	88 23       	and	r24, r24
 10a:	e4 f7       	brge	.-8      	; 0x104 <i2c_tx_address+0x20>
 10c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 110:	81 11       	cpse	r24, r1
 112:	07 c0       	rjmp	.+14     	; 0x122 <i2c_tx_address+0x3e>
 114:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 118:	88 7f       	andi	r24, 0xF8	; 248
 11a:	88 31       	cpi	r24, 0x18	; 24
 11c:	59 f4       	brne	.+22     	; 0x134 <i2c_tx_address+0x50>
 11e:	8f ef       	ldi	r24, 0xFF	; 255
 120:	08 95       	ret
 122:	81 30       	cpi	r24, 0x01	; 1
 124:	49 f4       	brne	.+18     	; 0x138 <i2c_tx_address+0x54>
 126:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 12a:	88 7f       	andi	r24, 0xF8	; 248
 12c:	80 34       	cpi	r24, 0x40	; 64
 12e:	31 f4       	brne	.+12     	; 0x13c <i2c_tx_address+0x58>
 130:	8f ef       	ldi	r24, 0xFF	; 255
 132:	08 95       	ret
 134:	8e ef       	ldi	r24, 0xFE	; 254
 136:	08 95       	ret
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	08 95       	ret
 13c:	8e ef       	ldi	r24, 0xFE	; 254
 13e:	08 95       	ret

00000140 <i2c_tx_byte>:
 140:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 144:	ec eb       	ldi	r30, 0xBC	; 188
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	80 68       	ori	r24, 0x80	; 128
 14c:	80 83       	st	Z, r24
 14e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 152:	88 23       	and	r24, r24
 154:	e4 f7       	brge	.-8      	; 0x14e <i2c_tx_byte+0xe>
 156:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 15a:	88 7f       	andi	r24, 0xF8	; 248
 15c:	88 32       	cpi	r24, 0x28	; 40
 15e:	11 f4       	brne	.+4      	; 0x164 <i2c_tx_byte+0x24>
 160:	8f ef       	ldi	r24, 0xFF	; 255
 162:	08 95       	ret
 164:	8e ef       	ldi	r24, 0xFE	; 254
 166:	08 95       	ret

00000168 <i2c_tx_stop>:

void i2c_tx_stop(void)
{
    /* clear interrupt flag, issue stop command (cleared automatically) */
    TWCR |= (1 << TWINT) | (1 << TWSTO);
 168:	ec eb       	ldi	r30, 0xBC	; 188
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	80 69       	ori	r24, 0x90	; 144
 170:	80 83       	st	Z, r24

    while (!(TWCR & (1 << TWSTO))); // wait until stop transmitted
 172:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 176:	84 ff       	sbrs	r24, 4
 178:	fc cf       	rjmp	.-8      	; 0x172 <i2c_tx_stop+0xa>
 17a:	08 95       	ret

0000017c <pca9685_init>:
    i2c_tx_byte(0x00); // set value of LEDXX_ON_L
    i2c_tx_byte(0x00); // set value of LEDXX_ON_H
    i2c_tx_byte(offLowCmnd); // set value of LEDXX_OFF_L
    i2c_tx_byte(offHighCmnd); // set value of LEDXX_OFF_H
    i2c_tx_stop();
}
 17c:	ff 92       	push	r15
 17e:	0f 93       	push	r16
 180:	1f 93       	push	r17
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	1f 92       	push	r1
 188:	cd b7       	in	r28, 0x3d	; 61
 18a:	de b7       	in	r29, 0x3e	; 62
 18c:	f8 2e       	mov	r15, r24
 18e:	8b 01       	movw	r16, r22
 190:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <globalFrequency+0x1>
 194:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <globalFrequency>
 198:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <globalAddress>
 19c:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_init>
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	0e 94 5c 00 	call	0xb8	; 0xb8 <i2c_tx_start>
 1a6:	80 e4       	ldi	r24, 0x40	; 64
 1a8:	8f 0d       	add	r24, r15
 1aa:	0e 94 72 00 	call	0xe4	; 0xe4 <i2c_tx_address>
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
 1b4:	81 e3       	ldi	r24, 0x31	; 49
 1b6:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
 1ba:	0e 94 b4 00 	call	0x168	; 0x168 <i2c_tx_stop>
 1be:	89 ef       	ldi	r24, 0xF9	; 249
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	01 97       	sbiw	r24, 0x01	; 1
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <pca9685_init+0x46>
 1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <pca9685_init+0x4c>
 1c8:	00 00       	nop
 1ca:	b8 01       	movw	r22, r16
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 c1 02 	call	0x582	; 0x582 <__floatunsisf>
 1d4:	20 e0       	ldi	r18, 0x00	; 0
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	40 e8       	ldi	r20, 0x80	; 128
 1da:	55 e4       	ldi	r21, 0x45	; 69
 1dc:	0e 94 4f 03 	call	0x69e	; 0x69e <__mulsf3>
 1e0:	2f e1       	ldi	r18, 0x1F	; 31
 1e2:	35 e8       	ldi	r19, 0x85	; 133
 1e4:	4b e6       	ldi	r20, 0x6B	; 107
 1e6:	5f e3       	ldi	r21, 0x3F	; 63
 1e8:	0e 94 4f 03 	call	0x69e	; 0x69e <__mulsf3>
 1ec:	9b 01       	movw	r18, r22
 1ee:	ac 01       	movw	r20, r24
 1f0:	60 e2       	ldi	r22, 0x20	; 32
 1f2:	7c eb       	ldi	r23, 0xBC	; 188
 1f4:	8e eb       	ldi	r24, 0xBE	; 190
 1f6:	9b e4       	ldi	r25, 0x4B	; 75
 1f8:	0e 94 20 02 	call	0x440	; 0x440 <__divsf3>
 1fc:	20 e0       	ldi	r18, 0x00	; 0
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	40 e8       	ldi	r20, 0x80	; 128
 202:	5f e3       	ldi	r21, 0x3F	; 63
 204:	0e 94 b3 01 	call	0x366	; 0x366 <__subsf3>
 208:	0e 94 92 02 	call	0x524	; 0x524 <__fixunssfsi>
 20c:	69 83       	std	Y+1, r22	; 0x01
 20e:	80 e0       	ldi	r24, 0x00	; 0
 210:	0e 94 5c 00 	call	0xb8	; 0xb8 <i2c_tx_start>
 214:	80 e4       	ldi	r24, 0x40	; 64
 216:	0e 94 72 00 	call	0xe4	; 0xe4 <i2c_tx_address>
 21a:	8e ef       	ldi	r24, 0xFE	; 254
 21c:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
 220:	89 81       	ldd	r24, Y+1	; 0x01
 222:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
 226:	0e 94 b4 00 	call	0x168	; 0x168 <i2c_tx_stop>
 22a:	89 ef       	ldi	r24, 0xF9	; 249
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	01 97       	sbiw	r24, 0x01	; 1
 230:	f1 f7       	brne	.-4      	; 0x22e <pca9685_init+0xb2>
 232:	00 c0       	rjmp	.+0      	; 0x234 <pca9685_init+0xb8>
 234:	00 00       	nop
 236:	80 e0       	ldi	r24, 0x00	; 0
 238:	0e 94 5c 00 	call	0xb8	; 0xb8 <i2c_tx_start>
 23c:	80 e4       	ldi	r24, 0x40	; 64
 23e:	0e 94 72 00 	call	0xe4	; 0xe4 <i2c_tx_address>
 242:	80 e0       	ldi	r24, 0x00	; 0
 244:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
 248:	81 ea       	ldi	r24, 0xA1	; 161
 24a:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
 24e:	0e 94 b4 00 	call	0x168	; 0x168 <i2c_tx_stop>
 252:	89 ef       	ldi	r24, 0xF9	; 249
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	01 97       	sbiw	r24, 0x01	; 1
 258:	f1 f7       	brne	.-4      	; 0x256 <pca9685_init+0xda>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <pca9685_init+0xe0>
 25c:	00 00       	nop
 25e:	80 e0       	ldi	r24, 0x00	; 0
 260:	0e 94 5c 00 	call	0xb8	; 0xb8 <i2c_tx_start>
 264:	80 e4       	ldi	r24, 0x40	; 64
 266:	0e 94 72 00 	call	0xe4	; 0xe4 <i2c_tx_address>
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
 270:	84 e0       	ldi	r24, 0x04	; 4
 272:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
 276:	0e 94 b4 00 	call	0x168	; 0x168 <i2c_tx_stop>
 27a:	0f 90       	pop	r0
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	1f 91       	pop	r17
 282:	0f 91       	pop	r16
 284:	ff 90       	pop	r15
 286:	08 95       	ret

00000288 <pca9685_pwm>:

void pca9685_pwm(uint8_t servoNum, uint16_t usec){
 288:	1f 93       	push	r17
 28a:	cf 93       	push	r28
 28c:	df 93       	push	r29
 28e:	c8 2f       	mov	r28, r24
	//else if (usec < 600) usec = 600;
	
	uint16_t pulse_us = usec; //1500 + angle*10;

	uint16_t period_us = 20000; // (float)1000000 / 50Hz;
	uint16_t count = (float)pulse_us/20000 * 4096; //((float)pulse_us / period_us) * 4096;
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	0e 94 c1 02 	call	0x582	; 0x582 <__floatunsisf>
 298:	20 e0       	ldi	r18, 0x00	; 0
 29a:	30 e4       	ldi	r19, 0x40	; 64
 29c:	4c e9       	ldi	r20, 0x9C	; 156
 29e:	56 e4       	ldi	r21, 0x46	; 70
 2a0:	0e 94 20 02 	call	0x440	; 0x440 <__divsf3>
 2a4:	20 e0       	ldi	r18, 0x00	; 0
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	40 e8       	ldi	r20, 0x80	; 128
 2aa:	55 e4       	ldi	r21, 0x45	; 69
 2ac:	0e 94 4f 03 	call	0x69e	; 0x69e <__mulsf3>
 2b0:	0e 94 92 02 	call	0x524	; 0x524 <__fixunssfsi>
 2b4:	16 2f       	mov	r17, r22
 2b6:	d7 2f       	mov	r29, r23

	uint8_t offLowCmnd = count;
	uint8_t offHighCmnd = count >> 8;

	i2c_tx_start(MASTER_TRANSMITTER);
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	0e 94 5c 00 	call	0xb8	; 0xb8 <i2c_tx_start>
	i2c_tx_address(0x40 + globalAddress); 
 2be:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <globalAddress>
 2c2:	80 5c       	subi	r24, 0xC0	; 192
 2c4:	0e 94 72 00 	call	0xe4	; 0xe4 <i2c_tx_address>
	i2c_tx_byte(SERVO0 + (4 * servoNum));
 2c8:	8c 2f       	mov	r24, r28
 2ca:	88 0f       	add	r24, r24
 2cc:	88 0f       	add	r24, r24
 2ce:	8a 5f       	subi	r24, 0xFA	; 250
 2d0:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
	i2c_tx_byte(0x00); 
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
	i2c_tx_byte(0x00); 
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
	i2c_tx_byte(offLowCmnd); 
 2e0:	81 2f       	mov	r24, r17
 2e2:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
	i2c_tx_byte(offHighCmnd); 
 2e6:	8d 2f       	mov	r24, r29
 2e8:	0e 94 a0 00 	call	0x140	; 0x140 <i2c_tx_byte>
	i2c_tx_stop();
 2ec:	0e 94 b4 00 	call	0x168	; 0x168 <i2c_tx_stop>
}
 2f0:	df 91       	pop	r29
 2f2:	cf 91       	pop	r28
 2f4:	1f 91       	pop	r17
 2f6:	08 95       	ret

000002f8 <main>:
// 로봇암 쉽게 움직이기
void MoveRobotArm(uint8_t, uint8_t);

int main(void)
{
	LED_DDR |= (1 << LED1) | (1 << LED2);
 2f8:	84 b1       	in	r24, 0x04	; 4
 2fa:	83 60       	ori	r24, 0x03	; 3
 2fc:	84 b9       	out	0x04, r24	; 4
	//LED_PORT |= (1 << LED2);
	
	pca9685_init(0x00, 50); // start PCA9685 device 0x00 at 50 Hz output
 2fe:	62 e3       	ldi	r22, 0x32	; 50
 300:	70 e0       	ldi	r23, 0x00	; 0
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	0e 94 be 00 	call	0x17c	; 0x17c <pca9685_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 308:	8f e1       	ldi	r24, 0x1F	; 31
 30a:	9e e4       	ldi	r25, 0x4E	; 78
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	f1 f7       	brne	.-4      	; 0x30c <main+0x14>
 310:	00 c0       	rjmp	.+0      	; 0x312 <main+0x1a>
 312:	00 00       	nop
 314:	9f ef       	ldi	r25, 0xFF	; 255
 316:	23 ed       	ldi	r18, 0xD3	; 211
 318:	80 e3       	ldi	r24, 0x30	; 48
 31a:	91 50       	subi	r25, 0x01	; 1
 31c:	20 40       	sbci	r18, 0x00	; 0
 31e:	80 40       	sbci	r24, 0x00	; 0
 320:	e1 f7       	brne	.-8      	; 0x31a <main+0x22>
 322:	00 c0       	rjmp	.+0      	; 0x324 <main+0x2c>
 324:	00 00       	nop
	_delay_ms(1000);

	//INIT_SERVO();

	while (1) {
		LED_PORT |= (1 << LED1);
 326:	85 b1       	in	r24, 0x05	; 5
 328:	81 60       	ori	r24, 0x01	; 1
 32a:	85 b9       	out	0x05, r24	; 5
		//MoveServo(SERVO_A(2), ANGLE(90), ANGLE(60));
		//_delay_ms(100);
		//MoveServo(SERVO_A(2), ANGLE(60), ANGLE(90));
		//_delay_ms(100);

		pca9685_pwm(SERVO_A(1), ANGLE(90));
 32c:	6c ed       	ldi	r22, 0xDC	; 220
 32e:	75 e0       	ldi	r23, 0x05	; 5
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	0e 94 44 01 	call	0x288	; 0x288 <pca9685_pwm>
		pca9685_pwm(SERVO_A(2), ANGLE(65));
 336:	62 ee       	ldi	r22, 0xE2	; 226
 338:	74 e0       	ldi	r23, 0x04	; 4
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	0e 94 44 01 	call	0x288	; 0x288 <pca9685_pwm>
		pca9685_pwm(SERVO_A(3), ANGLE(-20));
 340:	60 e9       	ldi	r22, 0x90	; 144
 342:	71 e0       	ldi	r23, 0x01	; 1
 344:	82 e0       	ldi	r24, 0x02	; 2
 346:	0e 94 44 01 	call	0x288	; 0x288 <pca9685_pwm>
		pca9685_pwm(SERVO_A(4), ANGLE(140));
 34a:	60 ed       	ldi	r22, 0xD0	; 208
 34c:	77 e0       	ldi	r23, 0x07	; 7
 34e:	83 e0       	ldi	r24, 0x03	; 3
 350:	0e 94 44 01 	call	0x288	; 0x288 <pca9685_pwm>
		pca9685_pwm(SERVO_A(5), ANGLE(45));
 354:	6a e1       	ldi	r22, 0x1A	; 26
 356:	74 e0       	ldi	r23, 0x04	; 4
 358:	84 e0       	ldi	r24, 0x04	; 4
 35a:	0e 94 44 01 	call	0x288	; 0x288 <pca9685_pwm>
		
		LED_PORT &= ~(1 << LED1);
 35e:	85 b1       	in	r24, 0x05	; 5
 360:	8e 7f       	andi	r24, 0xFE	; 254
 362:	85 b9       	out	0x05, r24	; 5
 364:	e0 cf       	rjmp	.-64     	; 0x326 <main+0x2e>

00000366 <__subsf3>:
 366:	50 58       	subi	r21, 0x80	; 128

00000368 <__addsf3>:
 368:	bb 27       	eor	r27, r27
 36a:	aa 27       	eor	r26, r26
 36c:	0e 94 cb 01 	call	0x396	; 0x396 <__addsf3x>
 370:	0c 94 15 03 	jmp	0x62a	; 0x62a <__fp_round>
 374:	0e 94 07 03 	call	0x60e	; 0x60e <__fp_pscA>
 378:	38 f0       	brcs	.+14     	; 0x388 <__addsf3+0x20>
 37a:	0e 94 0e 03 	call	0x61c	; 0x61c <__fp_pscB>
 37e:	20 f0       	brcs	.+8      	; 0x388 <__addsf3+0x20>
 380:	39 f4       	brne	.+14     	; 0x390 <__addsf3+0x28>
 382:	9f 3f       	cpi	r25, 0xFF	; 255
 384:	19 f4       	brne	.+6      	; 0x38c <__addsf3+0x24>
 386:	26 f4       	brtc	.+8      	; 0x390 <__addsf3+0x28>
 388:	0c 94 04 03 	jmp	0x608	; 0x608 <__fp_nan>
 38c:	0e f4       	brtc	.+2      	; 0x390 <__addsf3+0x28>
 38e:	e0 95       	com	r30
 390:	e7 fb       	bst	r30, 7
 392:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_inf>

00000396 <__addsf3x>:
 396:	e9 2f       	mov	r30, r25
 398:	0e 94 26 03 	call	0x64c	; 0x64c <__fp_split3>
 39c:	58 f3       	brcs	.-42     	; 0x374 <__addsf3+0xc>
 39e:	ba 17       	cp	r27, r26
 3a0:	62 07       	cpc	r22, r18
 3a2:	73 07       	cpc	r23, r19
 3a4:	84 07       	cpc	r24, r20
 3a6:	95 07       	cpc	r25, r21
 3a8:	20 f0       	brcs	.+8      	; 0x3b2 <__addsf3x+0x1c>
 3aa:	79 f4       	brne	.+30     	; 0x3ca <__addsf3x+0x34>
 3ac:	a6 f5       	brtc	.+104    	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 3ae:	0c 94 48 03 	jmp	0x690	; 0x690 <__fp_zero>
 3b2:	0e f4       	brtc	.+2      	; 0x3b6 <__addsf3x+0x20>
 3b4:	e0 95       	com	r30
 3b6:	0b 2e       	mov	r0, r27
 3b8:	ba 2f       	mov	r27, r26
 3ba:	a0 2d       	mov	r26, r0
 3bc:	0b 01       	movw	r0, r22
 3be:	b9 01       	movw	r22, r18
 3c0:	90 01       	movw	r18, r0
 3c2:	0c 01       	movw	r0, r24
 3c4:	ca 01       	movw	r24, r20
 3c6:	a0 01       	movw	r20, r0
 3c8:	11 24       	eor	r1, r1
 3ca:	ff 27       	eor	r31, r31
 3cc:	59 1b       	sub	r21, r25
 3ce:	99 f0       	breq	.+38     	; 0x3f6 <__addsf3x+0x60>
 3d0:	59 3f       	cpi	r21, 0xF9	; 249
 3d2:	50 f4       	brcc	.+20     	; 0x3e8 <__addsf3x+0x52>
 3d4:	50 3e       	cpi	r21, 0xE0	; 224
 3d6:	68 f1       	brcs	.+90     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 3d8:	1a 16       	cp	r1, r26
 3da:	f0 40       	sbci	r31, 0x00	; 0
 3dc:	a2 2f       	mov	r26, r18
 3de:	23 2f       	mov	r18, r19
 3e0:	34 2f       	mov	r19, r20
 3e2:	44 27       	eor	r20, r20
 3e4:	58 5f       	subi	r21, 0xF8	; 248
 3e6:	f3 cf       	rjmp	.-26     	; 0x3ce <__addsf3x+0x38>
 3e8:	46 95       	lsr	r20
 3ea:	37 95       	ror	r19
 3ec:	27 95       	ror	r18
 3ee:	a7 95       	ror	r26
 3f0:	f0 40       	sbci	r31, 0x00	; 0
 3f2:	53 95       	inc	r21
 3f4:	c9 f7       	brne	.-14     	; 0x3e8 <__addsf3x+0x52>
 3f6:	7e f4       	brtc	.+30     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 3f8:	1f 16       	cp	r1, r31
 3fa:	ba 0b       	sbc	r27, r26
 3fc:	62 0b       	sbc	r22, r18
 3fe:	73 0b       	sbc	r23, r19
 400:	84 0b       	sbc	r24, r20
 402:	ba f0       	brmi	.+46     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 404:	91 50       	subi	r25, 0x01	; 1
 406:	a1 f0       	breq	.+40     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 408:	ff 0f       	add	r31, r31
 40a:	bb 1f       	adc	r27, r27
 40c:	66 1f       	adc	r22, r22
 40e:	77 1f       	adc	r23, r23
 410:	88 1f       	adc	r24, r24
 412:	c2 f7       	brpl	.-16     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 414:	0e c0       	rjmp	.+28     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 416:	ba 0f       	add	r27, r26
 418:	62 1f       	adc	r22, r18
 41a:	73 1f       	adc	r23, r19
 41c:	84 1f       	adc	r24, r20
 41e:	48 f4       	brcc	.+18     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 420:	87 95       	ror	r24
 422:	77 95       	ror	r23
 424:	67 95       	ror	r22
 426:	b7 95       	ror	r27
 428:	f7 95       	ror	r31
 42a:	9e 3f       	cpi	r25, 0xFE	; 254
 42c:	08 f0       	brcs	.+2      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 42e:	b0 cf       	rjmp	.-160    	; 0x390 <__addsf3+0x28>
 430:	93 95       	inc	r25
 432:	88 0f       	add	r24, r24
 434:	08 f0       	brcs	.+2      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 436:	99 27       	eor	r25, r25
 438:	ee 0f       	add	r30, r30
 43a:	97 95       	ror	r25
 43c:	87 95       	ror	r24
 43e:	08 95       	ret

00000440 <__divsf3>:
 440:	0e 94 34 02 	call	0x468	; 0x468 <__divsf3x>
 444:	0c 94 15 03 	jmp	0x62a	; 0x62a <__fp_round>
 448:	0e 94 0e 03 	call	0x61c	; 0x61c <__fp_pscB>
 44c:	58 f0       	brcs	.+22     	; 0x464 <__divsf3+0x24>
 44e:	0e 94 07 03 	call	0x60e	; 0x60e <__fp_pscA>
 452:	40 f0       	brcs	.+16     	; 0x464 <__divsf3+0x24>
 454:	29 f4       	brne	.+10     	; 0x460 <__divsf3+0x20>
 456:	5f 3f       	cpi	r21, 0xFF	; 255
 458:	29 f0       	breq	.+10     	; 0x464 <__divsf3+0x24>
 45a:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_inf>
 45e:	51 11       	cpse	r21, r1
 460:	0c 94 49 03 	jmp	0x692	; 0x692 <__fp_szero>
 464:	0c 94 04 03 	jmp	0x608	; 0x608 <__fp_nan>

00000468 <__divsf3x>:
 468:	0e 94 26 03 	call	0x64c	; 0x64c <__fp_split3>
 46c:	68 f3       	brcs	.-38     	; 0x448 <__divsf3+0x8>

0000046e <__divsf3_pse>:
 46e:	99 23       	and	r25, r25
 470:	b1 f3       	breq	.-20     	; 0x45e <__divsf3+0x1e>
 472:	55 23       	and	r21, r21
 474:	91 f3       	breq	.-28     	; 0x45a <__divsf3+0x1a>
 476:	95 1b       	sub	r25, r21
 478:	55 0b       	sbc	r21, r21
 47a:	bb 27       	eor	r27, r27
 47c:	aa 27       	eor	r26, r26
 47e:	62 17       	cp	r22, r18
 480:	73 07       	cpc	r23, r19
 482:	84 07       	cpc	r24, r20
 484:	38 f0       	brcs	.+14     	; 0x494 <__divsf3_pse+0x26>
 486:	9f 5f       	subi	r25, 0xFF	; 255
 488:	5f 4f       	sbci	r21, 0xFF	; 255
 48a:	22 0f       	add	r18, r18
 48c:	33 1f       	adc	r19, r19
 48e:	44 1f       	adc	r20, r20
 490:	aa 1f       	adc	r26, r26
 492:	a9 f3       	breq	.-22     	; 0x47e <__divsf3_pse+0x10>
 494:	35 d0       	rcall	.+106    	; 0x500 <__divsf3_pse+0x92>
 496:	0e 2e       	mov	r0, r30
 498:	3a f0       	brmi	.+14     	; 0x4a8 <__divsf3_pse+0x3a>
 49a:	e0 e8       	ldi	r30, 0x80	; 128
 49c:	32 d0       	rcall	.+100    	; 0x502 <__divsf3_pse+0x94>
 49e:	91 50       	subi	r25, 0x01	; 1
 4a0:	50 40       	sbci	r21, 0x00	; 0
 4a2:	e6 95       	lsr	r30
 4a4:	00 1c       	adc	r0, r0
 4a6:	ca f7       	brpl	.-14     	; 0x49a <__divsf3_pse+0x2c>
 4a8:	2b d0       	rcall	.+86     	; 0x500 <__divsf3_pse+0x92>
 4aa:	fe 2f       	mov	r31, r30
 4ac:	29 d0       	rcall	.+82     	; 0x500 <__divsf3_pse+0x92>
 4ae:	66 0f       	add	r22, r22
 4b0:	77 1f       	adc	r23, r23
 4b2:	88 1f       	adc	r24, r24
 4b4:	bb 1f       	adc	r27, r27
 4b6:	26 17       	cp	r18, r22
 4b8:	37 07       	cpc	r19, r23
 4ba:	48 07       	cpc	r20, r24
 4bc:	ab 07       	cpc	r26, r27
 4be:	b0 e8       	ldi	r27, 0x80	; 128
 4c0:	09 f0       	breq	.+2      	; 0x4c4 <__divsf3_pse+0x56>
 4c2:	bb 0b       	sbc	r27, r27
 4c4:	80 2d       	mov	r24, r0
 4c6:	bf 01       	movw	r22, r30
 4c8:	ff 27       	eor	r31, r31
 4ca:	93 58       	subi	r25, 0x83	; 131
 4cc:	5f 4f       	sbci	r21, 0xFF	; 255
 4ce:	3a f0       	brmi	.+14     	; 0x4de <__divsf3_pse+0x70>
 4d0:	9e 3f       	cpi	r25, 0xFE	; 254
 4d2:	51 05       	cpc	r21, r1
 4d4:	78 f0       	brcs	.+30     	; 0x4f4 <__divsf3_pse+0x86>
 4d6:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_inf>
 4da:	0c 94 49 03 	jmp	0x692	; 0x692 <__fp_szero>
 4de:	5f 3f       	cpi	r21, 0xFF	; 255
 4e0:	e4 f3       	brlt	.-8      	; 0x4da <__divsf3_pse+0x6c>
 4e2:	98 3e       	cpi	r25, 0xE8	; 232
 4e4:	d4 f3       	brlt	.-12     	; 0x4da <__divsf3_pse+0x6c>
 4e6:	86 95       	lsr	r24
 4e8:	77 95       	ror	r23
 4ea:	67 95       	ror	r22
 4ec:	b7 95       	ror	r27
 4ee:	f7 95       	ror	r31
 4f0:	9f 5f       	subi	r25, 0xFF	; 255
 4f2:	c9 f7       	brne	.-14     	; 0x4e6 <__divsf3_pse+0x78>
 4f4:	88 0f       	add	r24, r24
 4f6:	91 1d       	adc	r25, r1
 4f8:	96 95       	lsr	r25
 4fa:	87 95       	ror	r24
 4fc:	97 f9       	bld	r25, 7
 4fe:	08 95       	ret
 500:	e1 e0       	ldi	r30, 0x01	; 1
 502:	66 0f       	add	r22, r22
 504:	77 1f       	adc	r23, r23
 506:	88 1f       	adc	r24, r24
 508:	bb 1f       	adc	r27, r27
 50a:	62 17       	cp	r22, r18
 50c:	73 07       	cpc	r23, r19
 50e:	84 07       	cpc	r24, r20
 510:	ba 07       	cpc	r27, r26
 512:	20 f0       	brcs	.+8      	; 0x51c <__divsf3_pse+0xae>
 514:	62 1b       	sub	r22, r18
 516:	73 0b       	sbc	r23, r19
 518:	84 0b       	sbc	r24, r20
 51a:	ba 0b       	sbc	r27, r26
 51c:	ee 1f       	adc	r30, r30
 51e:	88 f7       	brcc	.-30     	; 0x502 <__divsf3_pse+0x94>
 520:	e0 95       	com	r30
 522:	08 95       	ret

00000524 <__fixunssfsi>:
 524:	0e 94 2e 03 	call	0x65c	; 0x65c <__fp_splitA>
 528:	88 f0       	brcs	.+34     	; 0x54c <__fixunssfsi+0x28>
 52a:	9f 57       	subi	r25, 0x7F	; 127
 52c:	98 f0       	brcs	.+38     	; 0x554 <__fixunssfsi+0x30>
 52e:	b9 2f       	mov	r27, r25
 530:	99 27       	eor	r25, r25
 532:	b7 51       	subi	r27, 0x17	; 23
 534:	b0 f0       	brcs	.+44     	; 0x562 <__fixunssfsi+0x3e>
 536:	e1 f0       	breq	.+56     	; 0x570 <__fixunssfsi+0x4c>
 538:	66 0f       	add	r22, r22
 53a:	77 1f       	adc	r23, r23
 53c:	88 1f       	adc	r24, r24
 53e:	99 1f       	adc	r25, r25
 540:	1a f0       	brmi	.+6      	; 0x548 <__fixunssfsi+0x24>
 542:	ba 95       	dec	r27
 544:	c9 f7       	brne	.-14     	; 0x538 <__fixunssfsi+0x14>
 546:	14 c0       	rjmp	.+40     	; 0x570 <__fixunssfsi+0x4c>
 548:	b1 30       	cpi	r27, 0x01	; 1
 54a:	91 f0       	breq	.+36     	; 0x570 <__fixunssfsi+0x4c>
 54c:	0e 94 48 03 	call	0x690	; 0x690 <__fp_zero>
 550:	b1 e0       	ldi	r27, 0x01	; 1
 552:	08 95       	ret
 554:	0c 94 48 03 	jmp	0x690	; 0x690 <__fp_zero>
 558:	67 2f       	mov	r22, r23
 55a:	78 2f       	mov	r23, r24
 55c:	88 27       	eor	r24, r24
 55e:	b8 5f       	subi	r27, 0xF8	; 248
 560:	39 f0       	breq	.+14     	; 0x570 <__fixunssfsi+0x4c>
 562:	b9 3f       	cpi	r27, 0xF9	; 249
 564:	cc f3       	brlt	.-14     	; 0x558 <__fixunssfsi+0x34>
 566:	86 95       	lsr	r24
 568:	77 95       	ror	r23
 56a:	67 95       	ror	r22
 56c:	b3 95       	inc	r27
 56e:	d9 f7       	brne	.-10     	; 0x566 <__fixunssfsi+0x42>
 570:	3e f4       	brtc	.+14     	; 0x580 <__fixunssfsi+0x5c>
 572:	90 95       	com	r25
 574:	80 95       	com	r24
 576:	70 95       	com	r23
 578:	61 95       	neg	r22
 57a:	7f 4f       	sbci	r23, 0xFF	; 255
 57c:	8f 4f       	sbci	r24, 0xFF	; 255
 57e:	9f 4f       	sbci	r25, 0xFF	; 255
 580:	08 95       	ret

00000582 <__floatunsisf>:
 582:	e8 94       	clt
 584:	09 c0       	rjmp	.+18     	; 0x598 <__floatsisf+0x12>

00000586 <__floatsisf>:
 586:	97 fb       	bst	r25, 7
 588:	3e f4       	brtc	.+14     	; 0x598 <__floatsisf+0x12>
 58a:	90 95       	com	r25
 58c:	80 95       	com	r24
 58e:	70 95       	com	r23
 590:	61 95       	neg	r22
 592:	7f 4f       	sbci	r23, 0xFF	; 255
 594:	8f 4f       	sbci	r24, 0xFF	; 255
 596:	9f 4f       	sbci	r25, 0xFF	; 255
 598:	99 23       	and	r25, r25
 59a:	a9 f0       	breq	.+42     	; 0x5c6 <__floatsisf+0x40>
 59c:	f9 2f       	mov	r31, r25
 59e:	96 e9       	ldi	r25, 0x96	; 150
 5a0:	bb 27       	eor	r27, r27
 5a2:	93 95       	inc	r25
 5a4:	f6 95       	lsr	r31
 5a6:	87 95       	ror	r24
 5a8:	77 95       	ror	r23
 5aa:	67 95       	ror	r22
 5ac:	b7 95       	ror	r27
 5ae:	f1 11       	cpse	r31, r1
 5b0:	f8 cf       	rjmp	.-16     	; 0x5a2 <__floatsisf+0x1c>
 5b2:	fa f4       	brpl	.+62     	; 0x5f2 <__floatsisf+0x6c>
 5b4:	bb 0f       	add	r27, r27
 5b6:	11 f4       	brne	.+4      	; 0x5bc <__floatsisf+0x36>
 5b8:	60 ff       	sbrs	r22, 0
 5ba:	1b c0       	rjmp	.+54     	; 0x5f2 <__floatsisf+0x6c>
 5bc:	6f 5f       	subi	r22, 0xFF	; 255
 5be:	7f 4f       	sbci	r23, 0xFF	; 255
 5c0:	8f 4f       	sbci	r24, 0xFF	; 255
 5c2:	9f 4f       	sbci	r25, 0xFF	; 255
 5c4:	16 c0       	rjmp	.+44     	; 0x5f2 <__floatsisf+0x6c>
 5c6:	88 23       	and	r24, r24
 5c8:	11 f0       	breq	.+4      	; 0x5ce <__floatsisf+0x48>
 5ca:	96 e9       	ldi	r25, 0x96	; 150
 5cc:	11 c0       	rjmp	.+34     	; 0x5f0 <__floatsisf+0x6a>
 5ce:	77 23       	and	r23, r23
 5d0:	21 f0       	breq	.+8      	; 0x5da <__floatsisf+0x54>
 5d2:	9e e8       	ldi	r25, 0x8E	; 142
 5d4:	87 2f       	mov	r24, r23
 5d6:	76 2f       	mov	r23, r22
 5d8:	05 c0       	rjmp	.+10     	; 0x5e4 <__floatsisf+0x5e>
 5da:	66 23       	and	r22, r22
 5dc:	71 f0       	breq	.+28     	; 0x5fa <__floatsisf+0x74>
 5de:	96 e8       	ldi	r25, 0x86	; 134
 5e0:	86 2f       	mov	r24, r22
 5e2:	70 e0       	ldi	r23, 0x00	; 0
 5e4:	60 e0       	ldi	r22, 0x00	; 0
 5e6:	2a f0       	brmi	.+10     	; 0x5f2 <__floatsisf+0x6c>
 5e8:	9a 95       	dec	r25
 5ea:	66 0f       	add	r22, r22
 5ec:	77 1f       	adc	r23, r23
 5ee:	88 1f       	adc	r24, r24
 5f0:	da f7       	brpl	.-10     	; 0x5e8 <__floatsisf+0x62>
 5f2:	88 0f       	add	r24, r24
 5f4:	96 95       	lsr	r25
 5f6:	87 95       	ror	r24
 5f8:	97 f9       	bld	r25, 7
 5fa:	08 95       	ret

000005fc <__fp_inf>:
 5fc:	97 f9       	bld	r25, 7
 5fe:	9f 67       	ori	r25, 0x7F	; 127
 600:	80 e8       	ldi	r24, 0x80	; 128
 602:	70 e0       	ldi	r23, 0x00	; 0
 604:	60 e0       	ldi	r22, 0x00	; 0
 606:	08 95       	ret

00000608 <__fp_nan>:
 608:	9f ef       	ldi	r25, 0xFF	; 255
 60a:	80 ec       	ldi	r24, 0xC0	; 192
 60c:	08 95       	ret

0000060e <__fp_pscA>:
 60e:	00 24       	eor	r0, r0
 610:	0a 94       	dec	r0
 612:	16 16       	cp	r1, r22
 614:	17 06       	cpc	r1, r23
 616:	18 06       	cpc	r1, r24
 618:	09 06       	cpc	r0, r25
 61a:	08 95       	ret

0000061c <__fp_pscB>:
 61c:	00 24       	eor	r0, r0
 61e:	0a 94       	dec	r0
 620:	12 16       	cp	r1, r18
 622:	13 06       	cpc	r1, r19
 624:	14 06       	cpc	r1, r20
 626:	05 06       	cpc	r0, r21
 628:	08 95       	ret

0000062a <__fp_round>:
 62a:	09 2e       	mov	r0, r25
 62c:	03 94       	inc	r0
 62e:	00 0c       	add	r0, r0
 630:	11 f4       	brne	.+4      	; 0x636 <__fp_round+0xc>
 632:	88 23       	and	r24, r24
 634:	52 f0       	brmi	.+20     	; 0x64a <__fp_round+0x20>
 636:	bb 0f       	add	r27, r27
 638:	40 f4       	brcc	.+16     	; 0x64a <__fp_round+0x20>
 63a:	bf 2b       	or	r27, r31
 63c:	11 f4       	brne	.+4      	; 0x642 <__fp_round+0x18>
 63e:	60 ff       	sbrs	r22, 0
 640:	04 c0       	rjmp	.+8      	; 0x64a <__fp_round+0x20>
 642:	6f 5f       	subi	r22, 0xFF	; 255
 644:	7f 4f       	sbci	r23, 0xFF	; 255
 646:	8f 4f       	sbci	r24, 0xFF	; 255
 648:	9f 4f       	sbci	r25, 0xFF	; 255
 64a:	08 95       	ret

0000064c <__fp_split3>:
 64c:	57 fd       	sbrc	r21, 7
 64e:	90 58       	subi	r25, 0x80	; 128
 650:	44 0f       	add	r20, r20
 652:	55 1f       	adc	r21, r21
 654:	59 f0       	breq	.+22     	; 0x66c <__fp_splitA+0x10>
 656:	5f 3f       	cpi	r21, 0xFF	; 255
 658:	71 f0       	breq	.+28     	; 0x676 <__fp_splitA+0x1a>
 65a:	47 95       	ror	r20

0000065c <__fp_splitA>:
 65c:	88 0f       	add	r24, r24
 65e:	97 fb       	bst	r25, 7
 660:	99 1f       	adc	r25, r25
 662:	61 f0       	breq	.+24     	; 0x67c <__fp_splitA+0x20>
 664:	9f 3f       	cpi	r25, 0xFF	; 255
 666:	79 f0       	breq	.+30     	; 0x686 <__fp_splitA+0x2a>
 668:	87 95       	ror	r24
 66a:	08 95       	ret
 66c:	12 16       	cp	r1, r18
 66e:	13 06       	cpc	r1, r19
 670:	14 06       	cpc	r1, r20
 672:	55 1f       	adc	r21, r21
 674:	f2 cf       	rjmp	.-28     	; 0x65a <__fp_split3+0xe>
 676:	46 95       	lsr	r20
 678:	f1 df       	rcall	.-30     	; 0x65c <__fp_splitA>
 67a:	08 c0       	rjmp	.+16     	; 0x68c <__fp_splitA+0x30>
 67c:	16 16       	cp	r1, r22
 67e:	17 06       	cpc	r1, r23
 680:	18 06       	cpc	r1, r24
 682:	99 1f       	adc	r25, r25
 684:	f1 cf       	rjmp	.-30     	; 0x668 <__fp_splitA+0xc>
 686:	86 95       	lsr	r24
 688:	71 05       	cpc	r23, r1
 68a:	61 05       	cpc	r22, r1
 68c:	08 94       	sec
 68e:	08 95       	ret

00000690 <__fp_zero>:
 690:	e8 94       	clt

00000692 <__fp_szero>:
 692:	bb 27       	eor	r27, r27
 694:	66 27       	eor	r22, r22
 696:	77 27       	eor	r23, r23
 698:	cb 01       	movw	r24, r22
 69a:	97 f9       	bld	r25, 7
 69c:	08 95       	ret

0000069e <__mulsf3>:
 69e:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__mulsf3x>
 6a2:	0c 94 15 03 	jmp	0x62a	; 0x62a <__fp_round>
 6a6:	0e 94 07 03 	call	0x60e	; 0x60e <__fp_pscA>
 6aa:	38 f0       	brcs	.+14     	; 0x6ba <__mulsf3+0x1c>
 6ac:	0e 94 0e 03 	call	0x61c	; 0x61c <__fp_pscB>
 6b0:	20 f0       	brcs	.+8      	; 0x6ba <__mulsf3+0x1c>
 6b2:	95 23       	and	r25, r21
 6b4:	11 f0       	breq	.+4      	; 0x6ba <__mulsf3+0x1c>
 6b6:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_inf>
 6ba:	0c 94 04 03 	jmp	0x608	; 0x608 <__fp_nan>
 6be:	11 24       	eor	r1, r1
 6c0:	0c 94 49 03 	jmp	0x692	; 0x692 <__fp_szero>

000006c4 <__mulsf3x>:
 6c4:	0e 94 26 03 	call	0x64c	; 0x64c <__fp_split3>
 6c8:	70 f3       	brcs	.-36     	; 0x6a6 <__mulsf3+0x8>

000006ca <__mulsf3_pse>:
 6ca:	95 9f       	mul	r25, r21
 6cc:	c1 f3       	breq	.-16     	; 0x6be <__mulsf3+0x20>
 6ce:	95 0f       	add	r25, r21
 6d0:	50 e0       	ldi	r21, 0x00	; 0
 6d2:	55 1f       	adc	r21, r21
 6d4:	62 9f       	mul	r22, r18
 6d6:	f0 01       	movw	r30, r0
 6d8:	72 9f       	mul	r23, r18
 6da:	bb 27       	eor	r27, r27
 6dc:	f0 0d       	add	r31, r0
 6de:	b1 1d       	adc	r27, r1
 6e0:	63 9f       	mul	r22, r19
 6e2:	aa 27       	eor	r26, r26
 6e4:	f0 0d       	add	r31, r0
 6e6:	b1 1d       	adc	r27, r1
 6e8:	aa 1f       	adc	r26, r26
 6ea:	64 9f       	mul	r22, r20
 6ec:	66 27       	eor	r22, r22
 6ee:	b0 0d       	add	r27, r0
 6f0:	a1 1d       	adc	r26, r1
 6f2:	66 1f       	adc	r22, r22
 6f4:	82 9f       	mul	r24, r18
 6f6:	22 27       	eor	r18, r18
 6f8:	b0 0d       	add	r27, r0
 6fa:	a1 1d       	adc	r26, r1
 6fc:	62 1f       	adc	r22, r18
 6fe:	73 9f       	mul	r23, r19
 700:	b0 0d       	add	r27, r0
 702:	a1 1d       	adc	r26, r1
 704:	62 1f       	adc	r22, r18
 706:	83 9f       	mul	r24, r19
 708:	a0 0d       	add	r26, r0
 70a:	61 1d       	adc	r22, r1
 70c:	22 1f       	adc	r18, r18
 70e:	74 9f       	mul	r23, r20
 710:	33 27       	eor	r19, r19
 712:	a0 0d       	add	r26, r0
 714:	61 1d       	adc	r22, r1
 716:	23 1f       	adc	r18, r19
 718:	84 9f       	mul	r24, r20
 71a:	60 0d       	add	r22, r0
 71c:	21 1d       	adc	r18, r1
 71e:	82 2f       	mov	r24, r18
 720:	76 2f       	mov	r23, r22
 722:	6a 2f       	mov	r22, r26
 724:	11 24       	eor	r1, r1
 726:	9f 57       	subi	r25, 0x7F	; 127
 728:	50 40       	sbci	r21, 0x00	; 0
 72a:	9a f0       	brmi	.+38     	; 0x752 <__mulsf3_pse+0x88>
 72c:	f1 f0       	breq	.+60     	; 0x76a <__mulsf3_pse+0xa0>
 72e:	88 23       	and	r24, r24
 730:	4a f0       	brmi	.+18     	; 0x744 <__mulsf3_pse+0x7a>
 732:	ee 0f       	add	r30, r30
 734:	ff 1f       	adc	r31, r31
 736:	bb 1f       	adc	r27, r27
 738:	66 1f       	adc	r22, r22
 73a:	77 1f       	adc	r23, r23
 73c:	88 1f       	adc	r24, r24
 73e:	91 50       	subi	r25, 0x01	; 1
 740:	50 40       	sbci	r21, 0x00	; 0
 742:	a9 f7       	brne	.-22     	; 0x72e <__mulsf3_pse+0x64>
 744:	9e 3f       	cpi	r25, 0xFE	; 254
 746:	51 05       	cpc	r21, r1
 748:	80 f0       	brcs	.+32     	; 0x76a <__mulsf3_pse+0xa0>
 74a:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_inf>
 74e:	0c 94 49 03 	jmp	0x692	; 0x692 <__fp_szero>
 752:	5f 3f       	cpi	r21, 0xFF	; 255
 754:	e4 f3       	brlt	.-8      	; 0x74e <__mulsf3_pse+0x84>
 756:	98 3e       	cpi	r25, 0xE8	; 232
 758:	d4 f3       	brlt	.-12     	; 0x74e <__mulsf3_pse+0x84>
 75a:	86 95       	lsr	r24
 75c:	77 95       	ror	r23
 75e:	67 95       	ror	r22
 760:	b7 95       	ror	r27
 762:	f7 95       	ror	r31
 764:	e7 95       	ror	r30
 766:	9f 5f       	subi	r25, 0xFF	; 255
 768:	c1 f7       	brne	.-16     	; 0x75a <__mulsf3_pse+0x90>
 76a:	fe 2b       	or	r31, r30
 76c:	88 0f       	add	r24, r24
 76e:	91 1d       	adc	r25, r1
 770:	96 95       	lsr	r25
 772:	87 95       	ror	r24
 774:	97 f9       	bld	r25, 7
 776:	08 95       	ret

00000778 <_exit>:
 778:	f8 94       	cli

0000077a <__stop_program>:
 77a:	ff cf       	rjmp	.-2      	; 0x77a <__stop_program>
